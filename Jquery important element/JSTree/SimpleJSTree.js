

//for ajax based jstree java code
/*
        {
                id          : "string" // will be autogenerated if omitted
                text        : "string" // node text
                icon        : "string" // string for custom
                state       : {
                                    opened    : boolean  // is the node open
                                    disabled  : boolean  // is the node disabled
                                    selected  : boolean  // is the node selected
                                },
                children    : []  // array of strings or objects
                li_attr     : {}  // attributes for the generated LI node
                a_attr      : {}  // attributes for the generated A node
        }
     */
    public ArrayList<JSONObject> jsTreeFormat(  ArrayList<OfficeUnitDTO> officeUnitDTOS,String li_attr, String a_attr){
        OfficeUnitDTO officeUnitDTO =null;
        ArrayList<JSONObject> jsTreeFormatList = new ArrayList<>();
        JSONObject liattr = new JSONObject();
        JSONObject aattr = new JSONObject();
        liattr.put("class",li_attr);
        aattr.put("class",a_attr);
        for(int i=0; i<officeUnitDTOS.size(); i++){
            officeUnitDTO = officeUnitDTOS.get(i);
            JSONObject js = new JSONObject();
            js.put("id","officeunit-"+officeUnitDTO.getId());
            js.put("text",officeUnitDTO.getUnitNameBng());
            js.put("icon","fa fa-th-large");
            js.put("children",true);
            js.put("li_attr",liattr);
            js.put("a_attr",aattr);
            jsTreeFormatList.add(js);
        }
        return jsTreeFormatList;
    }




$('#using_json_3').jstree({
                'core' : {
                    'data': {
                        'method':'POST',
                        'url': function (node) {
                            var str = node.id;
                            var res = str.split("-");
                            if(res[0]=="#"){
                                return   '<%=request.getContextPath()%>/officeroot';
                            }
                            else if(res[0]=="root"){
                                return   '<%=request.getContextPath()%>/getofficeunitlistforjstreebyofficeid';
                            }
                            else if(res[0]=="officeunit"){
                                return   '<%=request.getContextPath()%>/getofficeunitorganogramforjstreebyofficeunitid';
                            }
                            else if(res[0]=="officeunitorganogram"){
                                return   '<%=request.getContextPath()%>/getofficeunitorganogramforjstreebyofficeunitid';
                            }

                        },
                        'data': function (node) {

                            var str = node.id;
                            var index = str.indexOf("#");
                            if(index != 0){
                                var res = str.split("-");
                                return {'id': parseInt(res[1]), "li_attr": "", "a_attr": ""};
                            }
                            else return {'id':${officeId}, "li_attr": "", "a_attr": ""};
                        }

                    }
                },
                'checkbox' : {
                    'keep_selected_style' : true
                },
                'plugins' : [ 'checkbox' ]
            });
			
			
			
